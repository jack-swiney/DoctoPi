[MAIN]
# Output format of the documentation. Supported types are: "markdown"
output_format = markdown

# Programming language of the source code. Supported types are "python"
src_language = python


[ORGANIZATION]
# Types of elements of a file to document. Will be documented in the
# order provided. Options are "classes" and/or "functions". Options
# should be separated by commas, no spaces.
file_docs = classes,functions

# Types of elements of a class to document. Will be documented in the
# order provided. Options are "constructor", "inner_classes",
# "class_variables", "instance_variables", and/or "methods". Options
# should be separated by commas, no spaces.
class_docs = constructor,inner_classes,class_variables,instance_variables,methods

# Types of elements of a function to document. Will be documented in the
# order provided. Options are "arguments", "raises", and/or "returns".
# Options should be separated by commas, no spaces.
function_docs = arguments,raises,returns

[MARKDOWN]

# Add a title to the generated Markdown file
title =

# Add an author to the generated Markdown file
author =

# Align text in markdown tables. Options are "left", "right" or "center"
table_align = left

[TABLE_OF_CONTENTS]

# Max depth of headings in the table of contents. Must be a value
# between [1,6].
depth = 3

# Title for the table of contents
title = Contents

[CONTENT]

# Class constructors
constructors = yes

# Class variables
class_vars = yes

# Instance variables
instance_vars = yes

# Inner Classes (class inside of another class)
inner_classes = yes

# Methods (functions of a class)
methods = yes

# Overview of each parsed file
overview = yes

# If yes, only document public methods. If no, also document private and
# protected methods
public_only = no
